name: CI

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover -s app/tests

      - name: Log in to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Install Docker and Docker Compose
        run: |
          # Install Docker (using the official Docker repository)
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

          # Add Dockerâ€™s official GPG key
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

          # Add Docker repository
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          # Install Docker Engine and containerd.io from Docker's official repository
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Check Docker Compose version

      - name: Build Docker image with Docker Compose
        run: |
          echo "Building Docker image..."
          docker-compose -f docker-compose.yml build
          docker images  # Check the list of built images

      - name: Push Docker image to DockerHub
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}"
          echo "Pushing Docker image to DockerHub: $IMAGE_NAME"
          docker-compose -f docker-compose.yml push
          docker images  # Check the list of images before push

      - name: Run Docker Compose (detached)
        run: |
          echo "Starting containers..."
          docker-compose -f docker-compose.yml up --build -d
          # Check the list of running containers
          docker ps

      - name: Wait for containers to be ready
        run: |
          echo "Waiting for containers to be fully up and running..."
          sleep 30  # Wait 30 seconds, adjust as necessary for your containers

      - name: Clean up containers
        run: |
          echo "Shutting down containers..."
          docker-compose down  # Stop and remove containers
