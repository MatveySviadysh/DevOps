version: '3.8'

services:
  nginx-server:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    restart: always
    networks:
      - my_network

  fastapi-server-1:
    build:
      context: .
      dockerfile: Dockerfile.fastapi1
    networks:
      - my_network
    ports:
      - "8000:8000"
    depends_on:
      - redis-server-1

  fastapi-server-2:
    build:
      context: .
      dockerfile: Dockerfile.fastapi2
    networks:
      - my_network
    ports:
      - "8001:8001"
    depends_on:
      - redis-server-2

  redis-server-1:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    networks:
      - my_network

  redis-server-2:
    image: redis:alpine
    ports:
      - "6380:6379"
    restart: always
    networks:
      - my_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    networks:
      - my_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    restart: always
    networks:
      - my_network

  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     node.name: es01
  #     discovery.seed_hosts: es01,es02,es03
  #     cluster.initial_master_nodes: es01,es02,es03
  #     cluster.name: mycluster
  #     bootstrap.memory_lock: "true"
  #     ES_JAVA_OPTS: -Xms256m -Xmx256m
  #   volumes:
  #     - "es-data-es01:/usr/share/elasticsearch/data"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl http://localhost:9200"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 120
  #   networks:
  #     - my_network

  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
  #   ports:
  #     - "9201:9200"
  #     - "9301:9300"
  #   environment:
  #     node.name: es02
  #     discovery.seed_hosts: es01,es02,es03
  #     cluster.initial_master_nodes: es01,es02,es03
  #     cluster.name: mycluster
  #     bootstrap.memory_lock: "true"
  #     ES_JAVA_OPTS: -Xms256m -Xmx256m
  #   volumes:
  #     - "es-data-es02:/usr/share/elasticsearch/data"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl http://localhost:9200"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 120
  #   networks:
  #     - my_network

  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
  #   ports:
  #     - "9202:9200"
  #     - "9303:9300"
  #   environment:
  #     node.name: es03
  #     discovery.seed_hosts: es01,es02,es03
  #     cluster.initial_master_nodes: es01,es02,es03
  #     cluster.name: mycluster
  #     bootstrap.memory_lock: "true"
  #     ES_JAVA_OPTS: -Xms256m -Xmx256m
  #   volumes:
  #     - "es-data-es03:/usr/share/elasticsearch/data"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl http://localhost:9200"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 120
  #   networks:
  #     - my_network

  # kibana:
  #   image: kibana:8.17.4
  #   depends_on:
  #     - es01
  #     - es02
  #     - es03
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - 'ELASTICSEARCH_HOSTS=["http://es01:9200","http://es02:9200","http://es03:9200"]'
  #   networks:
  #     - my_network
  
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.6.2
  #   ports:
  #     - "5044:5044"   # input
  #     - "9600:9600"   # monitoring
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
  #   environment:
  #     - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
  #   depends_on:
  #     - es01
  #     - es02
  #     - es03
  #   networks:
  #     - my_network

volumes:
  jenkins_home:
  # es-data-es01:
  # es-data-es02:
  # es-data-es03:

networks:
  my_network:
    driver: bridge
